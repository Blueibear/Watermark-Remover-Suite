name: CI

on:
  push:
    branches: [ main, claude/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install FFmpeg (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install FFmpeg (macOS)
      if: runner.os == 'macOS'
      run: brew install ffmpeg

    - name: Install FFmpeg (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install ffmpeg -y

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[develop]

    - name: Lint with ruff
      run: |
        ruff check .

    - name: Format check with black
      run: |
        black --check .

    - name: Type check with mypy
      run: |
        mypy watermark_remover --ignore-missing-imports
      continue-on-error: true

    - name: Run tests
      run: |
        pytest tests/ -v --tb=short

    - name: Test CLI smoke test
      run: |
        wmr --help

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel

    - name: Build package
      run: |
        python -m build

    - name: Upload distribution artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
