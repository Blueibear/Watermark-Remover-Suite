name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install ffmpeg (Ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libsm6 libxext6 libxrender-dev libgomp1

    - name: Install ffmpeg (Windows)
      if: startsWith(matrix.os, 'windows')
      uses: federicocarboni/setup-ffmpeg@v3

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[develop]

    - name: Run linting
      run: |
        ruff check .

    - name: Run unit tests (CPU baseline)
      run: |
        pytest -q -m "not gpu and not integration and not slow"

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[develop]

    - name: Check formatting with Black
      run: |
        black --check .

    - name: Run Ruff
      run: |
        ruff check .

    - name: Type check with mypy
      run: |
        mypy watermark_remover --ignore-missing-imports || true

  build:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: |
        python -m build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
